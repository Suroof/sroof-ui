import{_ as i,c as t,o as a,ae as n}from"./chunks/framework.BDX2i5pA.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Sroof UI","text":"现代化的 React UI 组件库","tagline":"支持 TypeScript，为现代 Web 应用而设计","actions":[{"theme":"brand","text":"快速开始","link":"/guide/getting-started"},{"theme":"alt","text":"查看组件","link":"/components/"}]},"features":[{"title":"TypeScript 优先","details":"完全使用 TypeScript 构建，提供完整的类型安全支持"},{"title":"现代化设计","details":"遵循现代设计原则，提供美观且一致的用户界面"},{"title":"易于使用","details":"简单直观的 API 设计，快速集成到您的项目中"},{"title":"高度可定制","details":"灵活的主题系统和样式选项，满足不同项目需求"},{"title":"无障碍访问","details":"遵循 WCAG 指南，确保所有用户都能访问"},{"title":"响应式设计","details":"移动优先的设计方法，适配各种屏幕尺寸"}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),e={name:"index.md"};function l(p,s,o,h,r,k){return a(),t("div",null,s[0]||(s[0]=[n(`<h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sroof-ui</span></span></code></pre></div><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Button } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;sroof-ui&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;sroof-ui/dist/index.css&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> variant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;primary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Hello Sroof UI!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="components-overview" tabindex="-1">Components Overview <a class="header-anchor" href="#components-overview" aria-label="Permalink to &quot;Components Overview&quot;">​</a></h2><ul><li><strong>Button</strong> - Customizable button component with multiple variants</li><li><strong>Input</strong> - Form input with validation support</li><li><strong>Menu</strong> - Flexible menu component with horizontal/vertical layouts</li><li><strong>Tabs</strong> - Tab navigation component with controlled/uncontrolled modes</li><li><strong>Radio</strong> - Radio button component for single selection</li><li><strong>Switch</strong> - Toggle switch component</li><li><strong>Form</strong> - Form wrapper component with validation</li><li><strong>LanguageSwitcher</strong> - Internationalization language switcher</li></ul>`,5)]))}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
